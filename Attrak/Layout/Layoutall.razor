@inherits LayoutComponentBase

<div class="layout-container">
    <header class="app-header">
        <div class="header-content">
            <div class="header-center">
                <div class="welcome-section">
                    <div class="welcome-text">Welcome to E-ATTRACK</div>
                    <div class="datetime-info">
                        <span class="current-date" id="currentDate"></span>
                        <span class="datetime-separator">•</span>
                        <span class="current-time" id="currentTime"></span>
                    </div>
                </div>
            </div>
            
            <div class="header-actions">
                <button class="action-btn notification-btn">
                    <span class="icon">🔔</span>
                    <span class="badge">3</span>
                </button>
                <button class="action-btn profile-btn">
                    <span class="icon">👤</span>
                    <span class="text">Admin</span>
                </button>
                <button class="action-btn logout-btn">
                    <span class="icon">🚪</span>
                </button>
            </div>
        </div>
    </header>
    
    <main class="main-content">
        @Body
    </main>
    </div>

<script>
    function updateDateTime() {
        const now = new Date();
        
        // Format date
        const options = { 
            weekday: 'long', 
            year: 'numeric', 
            month: 'long', 
            day: 'numeric' 
        };
        const dateString = now.toLocaleDateString('en-US', options);
        
        // Format time
        const timeString = now.toLocaleTimeString('en-US', {
            hour12: true,
            hour: '2-digit',
            minute: '2-digit',
            second: '2-digit'
        });
        
        // Update elements
        const dateElement = document.getElementById('currentDate');
        const timeElement = document.getElementById('currentTime');
        
        if (dateElement) dateElement.textContent = dateString;
        if (timeElement) timeElement.textContent = timeString;
    }
    
    // Update immediately
    updateDateTime();
    
    // Update every second
    setInterval(updateDateTime, 1000);
</script>

<style>
    .layout-container {
        min-height: 100vh;
        background: #ffffff;
        color: #333333;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .app-header {
        background: linear-gradient(135deg, #240750 0%, #344C64 50%, #240750 100%);
        border-bottom: 2px solid #5A6B7D;
        box-shadow: 0 4px 20px rgba(36, 7, 80, 0.3), 0 2px 10px rgba(52, 76, 100, 0.2);
        position: sticky;
        top: 0;
        z-index: 1000;
    }

    .header-content {
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 0.8rem 2rem;
        max-width: 1400px;
        margin: 0 auto;
        gap: 2rem;
        min-height: 60px;
        position: relative;
    }

    .header-center {
        flex: 1;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .welcome-section {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 0.3rem;
    }

    .welcome-text {
        font-size: 1rem;
        font-weight: 600;
        color: #ffffff;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
        letter-spacing: 0.5px;
    }

    .datetime-info {
        display: flex;
        align-items: center;
        gap: 0.8rem;
        background: rgba(255, 255, 255, 0.1);
        padding: 0.4rem 1rem;
        border-radius: 20px;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .current-date {
        font-size: 0.8rem;
        color: #B8C5D1;
        font-weight: 500;
    }

    .datetime-separator {
        color: #ffffff;
        font-weight: 600;
        font-size: 0.8rem;
    }

    .current-time {
        font-size: 0.8rem;
        color: #ffffff;
        font-weight: 600;
        font-family: 'Courier New', monospace;
    }


    .header-actions {
        display: flex;
        gap: 0.8rem;
        align-items: center;
        position: absolute;
        right: 2rem;
        top: 50%;
        transform: translateY(-50%);
    }

    .action-btn {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.6rem 1rem;
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 20px;
        color: #ffffff;
        font-size: 0.9rem;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s ease;
        backdrop-filter: blur(10px);
        position: relative;
    }

    .action-btn:hover {
        background: rgba(255, 255, 255, 0.2);
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    }

    .action-btn .icon {
        font-size: 1rem;
    }

    .notification-btn {
        position: relative;
    }

    .badge {
        position: absolute;
        top: -5px;
        right: -5px;
        background: #ff4757;
        color: white;
        border-radius: 50%;
        width: 18px;
        height: 18px;
        font-size: 0.7rem;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
    }

    .profile-btn .text {
        font-size: 0.8rem;
    }

    .main-content {
        flex: 1;
        padding: 2rem;
        background: #ffffff;
        min-height: calc(100vh - 100px);
    }

    /* Dark accent elements */
    .dark-purple {
        color: #240750;
        font-weight: 500;
    }

    .dark-blue {
        color: #344C64;
        font-weight: 500;
    }

    .light-accent {
        color: #5A6B7D;
        font-weight: 400;
    }

    /* Subtle effects for white background */
    .layout-container::before {
        content: '';
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: radial-gradient(circle at 30% 20%, rgba(36, 7, 80, 0.02) 0%, transparent 50%),
                    radial-gradient(circle at 70% 80%, rgba(52, 76, 100, 0.02) 0%, transparent 50%);
        pointer-events: none;
        z-index: -1;
    }

    /* Hover effects for interactive elements */
    .header-actions button,
    .header-actions a {
        color: #ffffff;
        padding: 0.5rem 1rem;
        border: 1px solid #5A6B7D;
        border-radius: 6px;
        background: transparent;
        transition: all 0.3s ease;
        text-decoration: none;
        font-weight: 500;
    }

    .header-actions button:hover,
    .header-actions a:hover {
        background: rgba(90, 107, 125, 0.2);
        border-color: #7A8B9D;
        transform: translateY(-1px);
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
    }

    @@media (max-width: 1200px) {
        .header-center {
            gap: 0.3rem;
        }
        
        .welcome-text {
            font-size: 0.9rem;
        }
        
        .datetime-info {
            padding: 0.3rem 0.8rem;
            gap: 0.6rem;
        }
        
        .current-date {
            font-size: 0.7rem;
        }
        
        .current-time {
            font-size: 0.7rem;
        }
    }

    @@media (max-width: 768px) {
        .header-content {
            padding: 0.6rem 1rem;
            gap: 1rem;
        }
        
        .welcome-text {
            font-size: 0.8rem;
        }
        
        .datetime-info {
            padding: 0.3rem 0.6rem;
            gap: 0.5rem;
        }
        
        .current-date {
            font-size: 0.6rem;
        }
        
        .current-time {
            font-size: 0.6rem;
        }
        
        .main-content {
            padding: 1rem;
        }
        
        .header-actions {
            right: 1rem;
            gap: 0.5rem;
        }
        
        .action-btn {
            padding: 0.4rem 0.6rem;
            font-size: 0.7rem;
        }
        
        .profile-btn .text {
            display: none;
        }
    }
</style>