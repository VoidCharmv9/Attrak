@page "/student-dashboard"
@using Attrak.Services
@using AttrackSharedClass.Models
@inject IAuthService AuthService
@inject NavigationManager Navigation
@inject HttpClient Http
@inject IJSRuntime JS

<PageTitle>Student Dashboard - Attrak</PageTitle>

<div class="container-fluid">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h2 class="fw-bold text-primary mb-1">Student Dashboard</h2>
                    <p class="text-muted mb-0">Welcome back, @(studentInfo?.FullName ?? "Student")!</p>
                </div>
                <div class="d-flex gap-2">
                    <button class="btn btn-outline-primary" @onclick="ViewQRCode">
                        <i class="bi bi-qr-code"></i> View QR Code
                    </button>
                    <button class="btn btn-outline-danger" @onclick="Logout">
                        <i class="bi bi-box-arrow-right"></i> Logout
                    </button>
                </div>
            </div>
        </div>
    </div>

    @if (isLoading)
    {
        <div class="d-flex justify-content-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (studentInfo != null)
    {
        <!-- Main Information Cards -->
        <div class="row mb-4">
            <!-- Student & School Info Card -->
            <div class="col-lg-8 col-md-12 mb-3">
                <div class="card h-100 shadow-sm">
                    <div class="card-header bg-primary text-white">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-person-fill me-2"></i>
                            Student Information
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <!-- Personal Details -->
                            <div class="col-md-6">
                                <div class="mb-4">
                                    <h6 class="text-primary fw-bold mb-3">
                                        <i class="bi bi-person-circle me-2"></i>
                                        Personal Details
                                    </h6>
                                    <div class="mb-3">
                                        <span class="text-muted small">Full Name</span>
                                        <div class="fw-bold">@studentInfo.FullName</div>
                                    </div>
                                    <div class="mb-3">
                                        <span class="text-muted small">Grade Level</span>
                                        <div class="fw-bold">Grade @studentInfo.GradeLevel</div>
                                    </div>
                                    <div class="mb-3">
                                        <span class="text-muted small">Section</span>
                                        <div class="fw-bold">@studentInfo.Section</div>
                                    </div>
                                    @if (!string.IsNullOrEmpty(studentInfo.Strand))
                                    {
                                        <div class="mb-3">
                                            <span class="text-muted small">Strand</span>
                                            <div class="fw-bold">@studentInfo.Strand</div>
                                        </div>
                                    }
                                </div>
                            </div>
                            
                            <!-- School Details -->
                            <div class="col-md-6">
                                <div class="mb-4">
                                    <h6 class="text-success fw-bold mb-3">
                                        <i class="bi bi-building me-2"></i>
                                        School Information
                                    </h6>
                                    <div class="mb-3">
                                        <span class="text-muted small">Region</span>
                                        <div class="fw-bold">@schoolInfo?.Region</div>
                                    </div>
                                    <div class="mb-3">
                                        <span class="text-muted small">Division</span>
                                        <div class="fw-bold">@schoolInfo?.Division</div>
                                    </div>
                                    <div class="mb-3">
                                        <span class="text-muted small">School Name</span>
                                        <div class="fw-bold">@schoolInfo?.SchoolName</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- QR Code Card -->
            <div class="col-lg-4 col-md-12 mb-3">
                <div class="card h-100 shadow-sm">
                    <div class="card-header bg-info text-white">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-qr-code me-2"></i>
                            QR Code
                        </h5>
                    </div>
                    <div class="card-body text-center d-flex flex-column justify-content-between">
                        @if (!string.IsNullOrEmpty(qrCodeData))
                        {
                            <div class="flex-grow-1 d-flex align-items-center justify-content-center">
                                <img src="@GetQRCodeDataUrl()" alt="Student QR Code" class="img-fluid" style="max-width: 180px;" />
                            </div>
                            <div class="mt-3">
                                <button class="btn btn-info w-100" @onclick="DownloadQRCode">
                                    <i class="bi bi-download me-2"></i> Download QR Code
                                </button>
                            </div>
                        }
                        else
                        {
                            <div class="flex-grow-1 d-flex flex-column align-items-center justify-content-center text-muted">
                                <i class="bi bi-qr-code" style="font-size: 4rem;"></i>
                                <p class="mt-3">QR Code not available</p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>



        <!-- Recent Activity -->
        <div class="row">
            <div class="col-12">
                <div class="card shadow-sm">
                    <div class="card-header bg-light">
                        <h5 class="card-title mb-0 text-dark">
                            <i class="bi bi-clock-history text-info me-2"></i>
                            Recent Activity
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="text-center text-muted py-5">
                            <div class="mb-3">
                                <i class="bi bi-calendar-check text-info" style="font-size: 4rem;"></i>
                            </div>
                            <h6 class="text-dark mb-2">No recent activity to display</h6>
                            <p class="mb-0 small">Your attendance records and activities will appear here once available</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger" role="alert">
            <i class="bi bi-exclamation-triangle me-2"></i>
            @errorMessage
        </div>
    }
</div>

@code {
    private UserInfo? currentUser;
    private StudentInfo? studentInfo;
    private SchoolInfo? schoolInfo;
    private string qrCodeData = string.Empty;
    private string errorMessage = string.Empty;
    private bool isLoading = true;

    public class StudentInfo
    {
        public string StudentId { get; set; } = string.Empty;
        public string FullName { get; set; } = string.Empty;
        public int GradeLevel { get; set; }
        public string Section { get; set; } = string.Empty;
        public string? Strand { get; set; }
        public string SchoolId { get; set; } = string.Empty;
    }


    protected override async Task OnInitializedAsync()
    {
        // Check if user is logged in
        currentUser = await AuthService.GetCurrentUserAsync();
        if (currentUser == null)
        {
            Navigation.NavigateTo("/student-portal");
            return;
        }

        // Check if user is a student
        if (currentUser.UserType != UserType.Student)
        {
            Navigation.NavigateTo("/dashboard");
            return;
        }

        await LoadStudentData();
    }

    private async Task LoadStudentData()
    {
        try
        {
            isLoading = true;
            errorMessage = string.Empty;
            StateHasChanged();

            if (currentUser?.StudentId != null)
            {
                // Load student information
                var studentResponse = await Http.GetFromJsonAsync<StudentInfo>($"api/register/student/{currentUser.StudentId}");
                studentInfo = studentResponse;

                if (studentInfo != null)
                {
                    // Load school information
                    var schoolResponse = await Http.GetFromJsonAsync<SchoolInfo>($"api/register/school/{studentInfo.SchoolId}");
                    schoolInfo = schoolResponse;

                    // Load QR code
                    var qrResponse = await Http.GetAsync($"api/register/student/{studentInfo.StudentId}/qr");
                    if (qrResponse.IsSuccessStatusCode)
                    {
                        qrCodeData = await qrResponse.Content.ReadAsStringAsync();
                        Console.WriteLine($"Dashboard QR Code Data Length: {qrCodeData?.Length ?? 0}");
                        Console.WriteLine($"Dashboard QR Code Data Preview: {qrCodeData?.Substring(0, Math.Min(50, qrCodeData?.Length ?? 0))}...");
                        Console.WriteLine($"Dashboard QR Code Data URL: {GetQRCodeDataUrl()?.Substring(0, Math.Min(100, GetQRCodeDataUrl()?.Length ?? 0))}...");
                    }
                }
            }
        }
        catch (Exception ex)
        {
            errorMessage = "Failed to load student data. Please try again.";
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private string GetQRCodeDataUrl()
    {
        if (string.IsNullOrEmpty(qrCodeData))
        {
            return string.Empty;
        }

        // If the data already includes the data URL prefix, return as is
        if (qrCodeData.StartsWith("data:"))
        {
            return qrCodeData;
        }

        // Otherwise, add the data URL prefix
        return $"data:image/png;base64,{qrCodeData}";
    }

    private void ViewQRCode()
    {
        if (studentInfo != null)
        {
            Navigation.NavigateTo($"/student-qr/{studentInfo.StudentId}");
        }
    }

    private async Task DownloadQRCode()
    {
        if (string.IsNullOrEmpty(qrCodeData) || studentInfo == null)
            return;

        try
        {
            var fileName = $"StudentQR_{studentInfo.StudentId}.png";
            var dataUrl = GetQRCodeDataUrl();
            
            await JS.InvokeVoidAsync("downloadFile", dataUrl, fileName);
        }
        catch (Exception ex)
        {
            errorMessage = "Failed to download QR code.";
            StateHasChanged();
        }
    }


    private void Logout()
    {
        // Clear authentication and redirect to login
        Navigation.NavigateTo("/student-portal");
    }
}

<script>
    window.downloadFile = (dataUrl, fileName) => {
        const link = document.createElement('a');
        link.href = dataUrl;
        link.download = fileName;
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    };
</script>
